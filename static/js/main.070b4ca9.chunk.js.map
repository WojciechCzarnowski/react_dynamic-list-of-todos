{"version":3,"sources":["components/TodoList/TodoList.tsx","api.ts","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","onUserSelect","useState","query","setQuery","filterBy","setFilterBy","filteredTodos","filter","todo","title","toLowerCase","includes","completed","className","type","value","onChange","event","target","map","checked","readOnly","onClick","userId","id","API_URL","getTodos","a","fetch","json","Error","statusCode","message","getUser","user","CurrentUser","selectedUserId","selectHandler","setUser","useEffect","loadedUser","username","email","phone","App","setTodos","setSelectedUserId","loadedTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.070b4ca9.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './TodoList.scss';\n\ninterface Props {\n  todos: Todo[];\n  onUserSelect: (userId: number) => void;\n}\n\nexport const TodoList: React.FC<Props> = ({ todos, onUserSelect }) => {\n  const [query, setQuery] = useState('');\n  const [filterBy, setFilterBy] = useState('all');\n\n  let filteredTodos = todos.filter(todo => (\n    todo.title.toLowerCase()\n      .includes(query.toLowerCase())\n  ));\n\n  switch (filterBy) {\n    case 'active':\n      filteredTodos = filteredTodos.filter(todo => !todo.completed);\n      break;\n    case 'completed':\n      filteredTodos = filteredTodos.filter(todo => todo.completed);\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <div className=\"TodoList\">\n      <h2>Todos:</h2>\n\n      <input\n        type=\"text\"\n        value={query}\n        onChange={(event) => setQuery(event.target.value)}\n      />\n\n      <select\n        onChange={event => {\n          setFilterBy(event.target.value);\n        }}\n      >\n        <option value=\"all\">All</option>\n        <option value=\"completed\">Completed</option>\n        <option value=\"active\">Active</option>\n      </select>\n\n      <div>\n        <ul data-cy=\"listOfTodos\">\n          {filteredTodos.map(todo => (\n            <li\n              key={todo.id}\n              className=\"TodoList__item TodoList__item--unchecked\"\n            >\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={todo.completed}\n                  readOnly\n                  data-cy=\"filterByTitle\"\n                />\n                <p>{todo.title}</p>\n              </label>\n\n              <button\n                className=\"\n                  Todo List__user-button\n                  TodoList__user-button--selected\n                  button\"\n                type=\"button\"\n                onClick={() => onUserSelect(todo.userId)}\n                data-cy=\"userButton\"\n              >\n                User&nbsp;#\n                {todo.userId}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","const API_URL = 'https://mate.academy/students-api';\n\nexport const getTodos = async (): Promise<Todo[]> => {\n  try {\n    const todos = await fetch(`${API_URL}/todos`);\n\n    return await todos.json();\n  } catch (error: any) {\n    throw new Error(`${error.statusCode} ${error.message}`);\n  }\n};\n\nexport const getUser = async (userId: number): Promise<User | null > => {\n  try {\n    const user = await fetch(`${API_URL}/users/${userId}`);\n\n    return await user.json();\n  } catch (error) {\n    return null;\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport './CurrentUser.scss';\nimport { getUser } from '../../api';\n\ninterface Props {\n  selectedUserId: number;\n  selectHandler: (userId: number) => void;\n}\n\nexport const CurrentUser: React.FC<Props> = (\n  {\n    selectedUserId,\n    selectHandler,\n  },\n) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    (async () => {\n      const loadedUser = await getUser(selectedUserId);\n\n      setUser(loadedUser);\n    })();\n  }, [selectedUserId]);\n\n  return (\n    <div className=\"CurrentUser\">\n      <h2 className=\"CurrentUser__title\">\n        <span>\n          Selected user:\n          {selectedUserId}\n        </span>\n      </h2>\n\n      <h3\n        className=\"CurrentUser__name\"\n        data-cy=\"userName\"\n      >\n        {user?.username}\n      </h3>\n      <p className=\"CurrentUser__email\">\n        {user?.email}\n      </p>\n      <p className=\"CurrentUser__phone\">\n        {user?.phone}\n      </p>\n\n      <button\n        type=\"button\"\n        onClick={() => selectHandler(0)}\n      >\n        Clear\n      </button>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api';\n\nconst App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedUserId, setSelectedUserId] = useState(0);\n\n  useEffect(() => {\n    (async () => {\n      const loadedTodos = await getTodos();\n\n      setTodos(loadedTodos);\n    })();\n  }, []);\n\n  const onUserSelect = (userId: number) => {\n    setSelectedUserId(userId);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        <TodoList\n          todos={todos}\n          onUserSelect={onUserSelect}\n        />\n      </div>\n\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          {selectedUserId ? (\n            <CurrentUser\n              selectedUserId={selectedUserId}\n              selectHandler={onUserSelect}\n            />\n          ) : 'No user selected'}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}